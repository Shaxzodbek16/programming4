services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app:delegated
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    command: sh -c "./run.sh"
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl -fs http://localhost:8000/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - .:/app:delegated
    environment:
      - PYTHONPATH=/app
    depends_on:
      backend:
        condition: service_healthy
    command: >
      sh -c "python -m celery -A app.core.celery worker -l INFO"
    networks:
      - app-network
    restart: on-failure

    healthcheck:
      test: >
        sh -c "python -m celery -A app.core.celery inspect ping || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:17.5-alpine3.20
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"

  redis:
    image: redis:8.0.1-alpine3.21
    restart: on-failure
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  db_data:
  redis_data:

networks:
  app-network:
    driver: bridge